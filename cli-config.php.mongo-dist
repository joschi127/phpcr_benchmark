<?php

$server     = 'localhost';
$port       = 27017;
$db_user    = '';
$db_pass    = '';
$database   = 'phpcr_benchmark';
$workspace  = 'benchmark';
$phpcr_user = 'admin';
$phpcr_pass = 'admin';


$mongoOptions = array('db' => $database);
if ($db_user) $mongoOptions['username'] = $db_user;
if ($db_pass) $mongoOptions['password'] = $db_pass;
$mongoClient = new \MongoClient(sprintf('mongodb://%s:%s', $server, $port), $mongoOptions);

$doctrineMongoDB = new \Doctrine\MongoDB\Database(
    new \Doctrine\MongoDB\Connection($mongoClient),
    new \MongoDB($mongoClient, $database),
    new \Doctrine\Common\EventManager()
);

$parameters = array('jackalope.mongodb_database' => $doctrineMongoDB);
$factory = new \Jackalope\RepositoryFactoryMongoDB();
$credentials = new \PHPCR\SimpleCredentials($phpcr_user, $phpcr_pass);
$repository = $factory->getRepository($parameters);
$adminSession = $repository->login($credentials, 'default');

$workspaceInstance = $adminSession->getWorkspace();
if (!in_array($workspace, $workspaceInstance->getAccessibleWorkspaceNames())) {
    $workspaceInstance->createWorkspace($workspace);
}

if (isset($argv[1])
    && $argv[1] != 'benchmark'
    && $argv[1] != 'list'
    && $argv[1] != 'help'
) {
    $repository = $factory->getRepository($parameters);

    $helperSet = new \Symfony\Component\Console\Helper\HelperSet(array(
        'dialog' => new \Symfony\Component\Console\Helper\DialogHelper(),
        'phpcr' => new \PHPCR\Util\Console\Helper\PhpcrHelper($repository->login($credentials, $workspace)),
        'phpcr_console_dumper' => new \PHPCR\Util\Console\Helper\PhpcrConsoleDumperHelper(),
    ));

    return;
}

$append = in_array('--append', $argv);

$count = 100;
$key = array_search('--count', $argv);
if ($key && isset($argv[$key+1]) && is_numeric($argv[$key+1])) {
    $count = $argv[$key+1];
}
$sections = 10;
$key = array_search('--sections', $argv);
if ($key && isset($argv[$key+1]) && is_numeric($argv[$key+1])) {
    $sections = $argv[$key+1];
}

if (!$append && $factory instanceof \Jackalope\RepositoryFactoryMongoDB) {
    // recreate database collections
    $doctrineMongoDB->drop();
    $workspaceInstance->createWorkspace('default');
    $workspaceInstance->createWorkspace($workspace);
}
